{"version":3,"sources":["layouts/Header.js","layouts/BreadCrumb.js","layouts/FullLayout.js","layouts/Sider.js","layouts/Content.js","layouts/index.js","components/example/Container.js"],"names":["Header","HeaderComponent","span","src","require","alt","style","width","maxWidth","Title","BreadCrumb","props","root","time","getTime","useCallback","format","formats","timeFormat","FULLDATETIME_DOT","dateTime","useMemo","justify","align","gutter","level","color","textAlign","fontSize","WithFullLayout","WrappedComponent","className","minHeight","this","React","Component","Sider","WithSiderLayout","theme","Content","WithContentLayout","routes","location","useLocation","type","padding","filter","route","service","getValue","map","key","path","to","exact","activeClassName","margin","pathname","name","fallback"],"mappings":"uNAGQA,E,IAAAA,OAcOC,MAZf,WACE,OACE,kBAACD,EAAD,KACE,2BACE,uBAAKE,KAAM,GACT,yBAAKC,IAAKC,EAAQ,KAAsBC,IAAI,OAAOC,MAAO,CAAEC,MAAO,MAAOC,SAAU,W,mCCLtFC,E,IAAAA,MA2BOC,MAzBf,SAAoBC,GAAQ,IAAD,EACKA,EAAtBC,YADiB,MACV,KADU,EACJC,EAASF,EAATE,KAEfC,EAAUC,uBAAY,WAC1B,OAAOH,EAAOC,EAAKG,OAAOC,IAAQC,WAAWC,kBAAoB,OAChE,CAACP,EAAMC,IAEJO,EAAWC,mBAAQ,kBAAMP,MAAW,CAACA,IAE3C,OACE,uBAAKQ,QAAQ,gBAAgBC,MAAM,SAASC,OAAQ,CAAC,EAAG,KACtD,uBAAKtB,KAAM,IACT,kBAACO,EAAD,CAAOgB,MAAO,EAAGnB,MAAO,CAAEoB,MAAO,YAAjC,iDAIF,uBAAKxB,KAAM,GAAII,MAAO,CAAEqB,UAAW,UACjC,kBAAClB,EAAD,CAAOgB,MAAO,EAAGnB,MAAO,CAAEoB,MAAO,UAAWE,SAAU,KACnDR,M,6CCPIS,MAbf,SAAwBC,GACtB,wLAEI,OACE,uBAAQC,UAAU,MAAMzB,MAAO,CAAE0B,UAAW,UAE1C,kBAACF,EAAqBG,KAAKtB,YALnC,EAAM,CAAeuB,IAAMC,Y,SCHrBC,E,IAAAA,MAiBOC,MAff,SAAyBP,GACvB,OAAO,YAAmB,IAAbnB,EAAY,kBACvB,OACE,kBAACyB,EAAD,eACEL,UAAU,aACVO,MAAO3B,EAAM2B,OAAS,QACtB/B,MAAOI,EAAMJ,OAAS,OAClBI,GAEJ,kBAACmB,EAAqBnB,MCXtB4B,E,IAAAA,QAYOC,MAVf,SAA2BV,GACzB,OAAO,YAAmB,IAAbnB,EAAY,kBACvB,OACE,kBAAC4B,EAAD,iBAAa5B,EAAb,CAAoBoB,UAAU,iBAC5B,kBAACD,EAAqBnB,MCT9B,2K,0MCwDekB,uBA/Cf,YAAgC,IAAXY,EAAU,EAAVA,OACbC,EAAWC,cAEjB,OACE,uBAAQZ,UAAU,WAChB,uBACEa,KAAK,OACLtB,QAAQ,SACRC,MAAM,SACNjB,MAAO,CAAEuC,QAAS,SAElB,uBAAK3C,KAAM,GAAII,MAAO,CAAEqB,UAAW,WAChCc,EACEK,QAAO,SAAAC,GAAK,OAAIC,IAAQC,SAASF,EAAO,2BACxCG,KAAI,SAAAH,GACH,OACE,kBAAC,IAAD,CACEI,IAAKJ,EAAMK,KACXC,GAAIN,EAAMK,KACVE,MAAOP,EAAMO,MACbC,gBAAgB,SAChBjD,MAAO,CAAEkD,OAAQ,UAEjB,uBACEZ,KACEF,EAASe,WAAaV,EAAMK,KAAO,UAAY,SAGhDL,EAAMW,YAQrB,kBAAC,WAAD,CAAUC,SAAU,uCAClB,kBAAC,IAAD,KACGlB,EAAOS,KAAI,SAAAH,GACV,OAAO,kBAAC,IAAD,eAAWI,IAAKJ,EAAMK,MAAUL","file":"static/js/10.dec88ad5.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, Row, Col } from 'antd';\n\nconst { Header } = Layout;\n\nfunction HeaderComponent() {\n  return (\n    <Header>\n      <Row>\n        <Col span={3}>\n          <img src={require('@/assets/logo.png')} alt=\"logo\" style={{ width: '90%', maxWidth: 130 }} />\n        </Col>\n      </Row>\n    </Header>\n  );\n}\n\nexport default HeaderComponent;\n","import React, { useMemo, useCallback } from 'react';\nimport { Typography, Row, Col } from 'antd';\n\nimport { formats } from '@/configs';\n\nconst { Title } = Typography;\n\nfunction BreadCrumb(props) {\n  const { root = null, time } = props;\n  \n  const getTime = useCallback(() => {\n    return root ? time.format(formats.timeFormat.FULLDATETIME_DOT) : null;\n  }, [root, time]);\n\n  const dateTime = useMemo(() => getTime(), [getTime]);\n\n  return (\n    <Row justify=\"space-between\" align=\"bottom\" gutter={[0, 10]}>\n      <Col span={12}>\n        <Title level={3} style={{ color: '#3f86ef' }}>\n          실시간 발전 현황\n        </Title>\n      </Col>\n      <Col span={12} style={{ textAlign: 'right' }}>\n        <Title level={4} style={{ color: '#ffffff', fontSize: 21 }}>\n          {dateTime}\n        </Title>\n      </Col>\n    </Row>\n  )\n}\n\nexport default BreadCrumb\n","import React from 'react';\nimport { Layout } from 'antd';\n\n// Header와 Footer를 갖고 있는 layout입니다. HOC\n\nfunction WithFullLayout(WrappedComponent) {\n  return class extends React.Component {\n    render() {\n      return (\n        <Layout className=\"app\" style={{ minHeight: '100vh' }}>\n          {/* WrappedComponent는 반드시 Layout으로 wrapping되어야 하며, Layout.Content를 포함해야한다 */}\n          <WrappedComponent {...this.props} />\n        </Layout>\n      );\n    }\n  };\n}\n\nexport default WithFullLayout;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Sider } = Layout;\n\nfunction WithSiderLayout(WrappedComponent) {\n  return ({ ...props }) => {\n    return (\n      <Sider\n        className=\"sider-wrap\"\n        theme={props.theme || 'light'}\n        width={props.width || '300'}\n        {...props}\n      >\n        <WrappedComponent {...props} />\n      </Sider>\n    );\n  };\n}\n\nexport default WithSiderLayout;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nfunction WithContentLayout(WrappedComponent) {\n  return ({ ...props }) => {\n    return (\n      <Content {...props} className=\"content-wrap\">\n        <WrappedComponent {...props} />\n      </Content>\n    );\n  };\n}\n\nexport default WithContentLayout;\n","import HeaderComponent from './Header';\nimport BreadCrumb from './BreadCrumb';\n\n// hoc layout\nimport WithFullLayout from './FullLayout';\nimport WithSiderLayout from './Sider';\nimport WithContentLayout from './Content';\n\nexport {\n  HeaderComponent,\n  WithFullLayout,\n  WithSiderLayout,\n  WithContentLayout,\n  BreadCrumb,\n};\n","import React, { Suspense } from 'react';\nimport { Layout, Row, Col, Button } from 'antd';\n\nimport { Switch, useLocation, NavLink } from 'react-router-dom';\nimport { WithFullLayout } from '@/layouts';\nimport { SubRoutes } from '@/router';\n\nimport { service } from '@/configs';\n\nfunction Container({ routes }) {\n  const location = useLocation();\n\n  return (\n    <Layout className=\"example\">\n      <Row\n        type=\"flex\"\n        justify=\"center\"\n        align=\"middle\"\n        style={{ padding: '10px' }}\n      >\n        <Col span={24} style={{ textAlign: 'center' }}>\n          {routes\n            .filter(route => service.getValue(route, 'meta.navigation.show'))\n            .map(route => {\n              return (\n                <NavLink\n                  key={route.path}\n                  to={route.path}\n                  exact={route.exact}\n                  activeClassName=\"active\"\n                  style={{ margin: '0 5px' }}\n                >\n                  <Button\n                    type={\n                      location.pathname === route.path ? 'primary' : 'ghost'\n                    }\n                  >\n                    {route.name}\n                  </Button>\n                </NavLink>\n              );\n            })}\n        </Col>\n      </Row>\n\n      <Suspense fallback={<span>&nbsp;</span>}>\n        <Switch>\n          {routes.map(route => {\n            return <SubRoutes key={route.path} {...route} />;\n          })}\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default WithFullLayout(Container);\n"],"sourceRoot":""}