{"version":3,"sources":["layouts/Header.js","layouts/BreadCrumb.js","layouts/FullLayout.js","layouts/Sider.js","layouts/Content.js","layouts/index.js","configs/formats.js","configs/columns.js","configs/service.js","configs/index.js","components/commons/utils/CommonChart.js","components/commons/index.js","assets/sider_top.png","assets/sider_bottom.png","components/dashboard/Content.js","components/dashboard/Container.js"],"names":["Header","HeaderComponent","span","src","require","alt","style","width","maxWidth","Title","BreadCrumb","props","root","time","getTime","useCallback","format","formats","timeFormat","FULLDATETIME_DOT","dateTime","useMemo","justify","align","gutter","level","color","textAlign","fontSize","WithFullLayout","WrappedComponent","className","minHeight","this","React","Component","Sider","WithSiderLayout","theme","Content","WithContentLayout","FULLDATE","FULLTIME","TIME_MIN","TIME_HOUR","YEARMONTH","FULLDATETIME","HALFDATETIME","HALFDATEHOUR","detailColumns","key","dataIndex","title","fixed","service","getValue","obj","defaultValue","keys","split","value","i","len","length","newValue","getFixed","undefined","decimal","Number","toFixed","getPrefix","interval","timeType","gap","of","translate","display","column","getXAxisData","params","labels","getLabels","prefixs","map","label","moment","from","to","diffs","diff","Array","fill","item","idx","add","defaultStyle","height","CommonChart","options","defaultOptions","legend","top","right","itemGap","grid","left","bottom","tooltip","trigger","position","point","dom","rect","size","contentSize","viewSize","xAxis","type","axisPointer","axisLabel","axisLine","show","axisTick","yAxis","inside","formatter","padding","lineStyle","splitLine","series","getOption","Object","reduce","result","isArray","inx","echarts","option","notMerge","lazyUpdate","module","exports","console","log","mockData","mockDataEach","useParams","useState","year","month","date","hour","minute","current","setCurrent","subtract","times","mergedData","innerResult","inner","realPv","useEffect","getOptions","data","textStyle","name","symbol","itemStyle","marginRight","background","paddingTop","marginTop","history","useHistory","flex","marginBottom","bordered","onClick","push","cursor"],"mappings":"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","file":"static/js/4.c5d3c4b4.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, Row, Col } from 'antd';\n\nconst { Header } = Layout;\n\nfunction HeaderComponent() {\n  return (\n    <Header>\n      <Row>\n        <Col span={3}>\n          <img src={require('@/assets/logo.png')} alt=\"logo\" style={{ width: '90%', maxWidth: 130 }} />\n        </Col>\n      </Row>\n    </Header>\n  );\n}\n\nexport default HeaderComponent;\n","import React, { useMemo, useCallback } from 'react';\nimport { Typography, Row, Col } from 'antd';\n\nimport { formats } from '@/configs';\n\nconst { Title } = Typography;\n\nfunction BreadCrumb(props) {\n  const { root = null, time } = props;\n  \n  const getTime = useCallback(() => {\n    return root ? time.format(formats.timeFormat.FULLDATETIME_DOT) : null;\n  }, [root, time]);\n\n  const dateTime = useMemo(() => getTime(), [getTime]);\n\n  return (\n    <Row justify=\"space-between\" align=\"bottom\" gutter={[0, 10]}>\n      <Col span={12}>\n        <Title level={3} style={{ color: '#3f86ef' }}>\n          실시간 발전 현황\n        </Title>\n      </Col>\n      <Col span={12} style={{ textAlign: 'right' }}>\n        <Title level={4} style={{ color: '#ffffff', fontSize: 21 }}>\n          {dateTime}\n        </Title>\n      </Col>\n    </Row>\n  )\n}\n\nexport default BreadCrumb\n","import React from 'react';\nimport { Layout } from 'antd';\n\n// Header와 Footer를 갖고 있는 layout입니다. HOC\n\nfunction WithFullLayout(WrappedComponent) {\n  return class extends React.Component {\n    render() {\n      return (\n        <Layout className=\"app\" style={{ minHeight: '100vh' }}>\n          {/* WrappedComponent는 반드시 Layout으로 wrapping되어야 하며, Layout.Content를 포함해야한다 */}\n          <WrappedComponent {...this.props} />\n        </Layout>\n      );\n    }\n  };\n}\n\nexport default WithFullLayout;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Sider } = Layout;\n\nfunction WithSiderLayout(WrappedComponent) {\n  return ({ ...props }) => {\n    return (\n      <Sider\n        className=\"sider-wrap\"\n        theme={props.theme || 'light'}\n        width={props.width || '300'}\n        {...props}\n      >\n        <WrappedComponent {...props} />\n      </Sider>\n    );\n  };\n}\n\nexport default WithSiderLayout;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nfunction WithContentLayout(WrappedComponent) {\n  return ({ ...props }) => {\n    return (\n      <Content {...props} className=\"content-wrap\">\n        <WrappedComponent {...props} />\n      </Content>\n    );\n  };\n}\n\nexport default WithContentLayout;\n","import HeaderComponent from './Header';\nimport BreadCrumb from './BreadCrumb';\n\n// hoc layout\nimport WithFullLayout from './FullLayout';\nimport WithSiderLayout from './Sider';\nimport WithContentLayout from './Content';\n\nexport {\n  HeaderComponent,\n  WithFullLayout,\n  WithSiderLayout,\n  WithContentLayout,\n  BreadCrumb,\n};\n","const timeFormat = {\n  FULLDATE: 'YYYY-MM-DD',\n  FULLTIME: 'HH:mm:ss',\n  TIME_MIN: 'HH:mm',\n  TIME_HOUR: 'HH',\n\n  YEARMONTH: 'YYYY-MM',\n\n  FULLDATETIME_DOT: 'YYYY.MM.DD HH:mm',\n};\n\ntimeFormat.FULLDATETIME = `${timeFormat.FULLDATE} ${timeFormat.FULLTIME}`;\ntimeFormat.HALFDATETIME = `${timeFormat.FULLDATE} ${timeFormat.TIME_MIN}`;\ntimeFormat.HALFDATEHOUR = `${timeFormat.FULLDATE} ${timeFormat.TIME_HOUR}`;\n\nexport {\n  timeFormat\n};\n","const detailColumns = [\n  { \n    key: 'label',\n    dataIndex: ['label'],\n    title: '시간',\n    fixed: 'left',\n    width: 200\n  }\n];\n\nexport {\n  detailColumns\n}","import moment from 'moment';\n\nconst defaultDecimal = 2;\n\nconst service = {\n  getValue: (obj, key, defaultValue) => {\n    if (!obj) {\n      return defaultValue;\n    }\n\n    if (!key) {\n      return defaultValue;\n    }\n\n    const keys = key.split('.');\n    let value = obj;\n    for (let i = 0, len = keys.length; i < len; i += 1) {\n      const newValue = value[keys[i]];\n      if (!newValue) {\n        return defaultValue;\n      }\n      value = newValue;\n    }\n    return value;\n  },\n  getFixed: (\n    value = undefined,\n    decimal = defaultDecimal,\n  ) => {\n    if (!value) {\n      return 0;\n    }\n    return Number((value || 0).toFixed(decimal));\n  },\n  getPrefix: (interval)  => {\n    switch (interval) {\n      case 'MONTHLY':\n        return {\n          timeType: 'months',\n          gap: 1,\n          of: 'year',\n          format: 'YYYY-MM',\n          translate: 'MM',\n          display: 'YYYY',\n          column: 'YYYY-MM',\n        };\n      case 'HOURLY':\n        return {\n          timeType: 'hours',\n          gap: 1,\n          of: 'day',\n          format: 'YYYY-MM-DD HH',\n          translate: 'HH',\n          display: 'YYYY-MM-DD',\n          column: 'HH:mm',\n        };\n      default:\n        return {\n          timeType: 'days',\n          of: 'month',\n          gap: 1,\n          format: 'YYYY-MM-DD',\n          translate: 'MM-DD',\n          display: 'YYYY-MM',\n          column: 'YYYY-MM-DD',\n        };\n    }\n  },\n  getXAxisData: (params) => {\n    const labels = service.getLabels(params);\n    const prefixs = service.getPrefix(params.interval);\n    return labels.map((label) => moment(label, prefixs.format).format(prefixs.translate));\n  },\n  getLabels: (params) => {\n    const { from, to, interval } = params;\n    const prefixs = service.getPrefix(interval);\n    const diffs = (moment(to).diff(moment(from), prefixs.timeType) / prefixs.gap).toFixed(0);\n    const length = Number(diffs) + 1;\n\n    return new Array(length).fill('').map((item, idx) => moment(from, prefixs.format)\n      .add(prefixs.gap * idx, prefixs.timeType)\n      .format(prefixs.format));\n  },\n};\n\nexport default service;\n","import * as formats from './formats';\nimport * as columns from './columns';\nimport service from './service';\n\nexport { formats, service, columns };\n","import React from \"react\";\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts/lib/echarts';\n\n// chart type\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/bar';\n// import 'echarts/lib/chart/pie';\n// import 'echarts/lib/chart/scatter';\n// import 'echarts/lib/chart/radar';\n \n// import 'echarts/lib/chart/map';\n// import 'echarts/lib/chart/treemap';\n// import 'echarts/lib/chart/graph';\n// import 'echarts/lib/chart/gauge';\n// import 'echarts/lib/chart/funnel';\n// import 'echarts/lib/chart/parallel';\n// import 'echarts/lib/chart/sankey';\n// import 'echarts/lib/chart/boxplot';\n// import 'echarts/lib/chart/candlestick';\n// import 'echarts/lib/chart/effectScatter';\n// import 'echarts/lib/chart/lines';\n// import 'echarts/lib/chart/heatmap';\n\n// options\n// import 'echarts/lib/component/graphic';\nimport 'echarts/lib/component/grid';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\n// import 'echarts/lib/component/polar';\n// import 'echarts/lib/component/geo';\n// import 'echarts/lib/component/parallel';\n// import 'echarts/lib/component/singleAxis';\n// import 'echarts/lib/component/brush';\n\n// import 'echarts/lib/component/title';\n \n// import 'echarts/lib/component/dataZoom';\n// import 'echarts/lib/component/visualMap';\n \n// import 'echarts/lib/component/markPoint';\n// import 'echarts/lib/component/markLine';\n// import 'echarts/lib/component/markArea';\n \n// import 'echarts/lib/component/timeline';\n// import 'echarts/lib/component/toolbox';\n\nconst defaultStyle = {\n  height: 200,\n}\n\nexport default function CommonChart (props) {\n  const { options = {}, style } = props;\n\n  const defaultOptions = {\n    legend: {\n      top: 0,\n      right: 10,\n      itemGap: 20,\n    },\n    grid: {\n      left: 0,\n      right: 0,\n      top: 50,\n      bottom: 30,\n    },\n    tooltip: {\n      trigger: 'axis',\n      position: (point, params, dom, rect, size) => {\n        const { contentSize = [], viewSize = [] } = size\n        const x = point[0] + contentSize[0] > viewSize[0] ? viewSize[0] - contentSize[0] : point[0]\n        return [x, `${viewSize[1] - contentSize[1]}`]\n      }\n    },\n    xAxis: {\n      type: 'category',\n      axisPointer: {\n        type: 'shadow',\n        label: {\n          fontSize: 12,\n          color: '#333d4b'\n        }\n      },\n      axisLabel: {\n        color: '#4e73aa'\n      },\n      axisLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false\n      }\n    },\n    yAxis: {\n      axisLabel: {\n        color: '#4e73aa',\n        inside: true,\n        formatter: (value) => {\n          if (value === 0) {\n            return null;\n          }\n          return value;\n        },\n        padding: [22, 0, 0, 0]\n      },\n      axisLine: {\n        show: false,\n        lineStyle: {\n          color: '#4e73aa',\n          type: 'dashed'\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: '#4e73aa',\n          type: 'dashed'\n        }\n      },\n      axisTick: {\n        show: false\n      }\n    },\n    series: []\n  };\n\n  const getOption = React.useCallback(() => {\n    return options ? Object.keys(options).reduce((result, key) => {\n      if (Array.isArray(result[key])) {\n        result[key] = options[key].length ? options[key].map((item, inx) => {\n          return {\n            ...result[key][inx],\n            ...options[key][inx]\n          }\n        }) : result[key]\n      } else {\n        result[key] = {\n          ...result[key],\n          ...options[key]\n        }\n      }\n      return result;\n    }, defaultOptions) : {}\n  }, [options, defaultOptions]);\n\n  return (\n    <ReactEchartsCore\n      echarts={echarts}\n      option={getOption()}\n      notMerge\n      lazyUpdate\n      style={{...defaultStyle, ...style}}\n    />\n  );\n}","import { CommonChart } from './utils';\n\nexport {\n  CommonChart\n}","module.exports = __webpack_public_path__ + \"static/media/sider_top.1feb7784.png\";","module.exports = __webpack_public_path__ + \"static/media/sider_bottom.0df0c6fd.png\";","/* eslint-disable no-param-reassign */\nimport React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Layout, Button } from 'antd';\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom';\n\nimport { HeaderComponent, BreadCrumb } from '@/layouts';\nimport { service } from '@/configs';\nimport { CommonChart } from '@/components/commons';\n\nimport mockData from '@/tft-total.json';\nimport mockDataEach from '@/tft.json';\n\nconsole.log('mockData', mockData);\nconsole.log('mockDataEach', mockDataEach);\n\nfunction Content() {\n  const params = useParams();\n\n  const [ current, setCurrent ] = useState(moment().year(2020).month(6).date(27).hour(9).minute(0));\n\n  const [ times ] = useState({\n    from: moment(current).subtract(1, 'd').hour(18),\n    to: moment(current).add(1, 'd').hour(4),\n  });\n\n  // total\n  const mergedData = mockDataEach.reduce((result, item) => {\n    if(!result['realPv'].length) {\n      result['realPv'] = service.getValue(item, 'realPv', []);\n    } else {\n      result['realPv'] = result['realPv'].reduce((innerResult, inner, idx) => {\n        innerResult[idx]['pv'] = service.getValue(innerResult, `${idx}.pv`, 0) + service.getValue(inner, 'pv', 0)\n        return innerResult;\n      }, result['realPv']);\n    } \n    return result;\n  }, { realPv: [] });\n\n  console.log('mergedData', mergedData)\n\n  useEffect(() => {\n    const setTime = () => {\n      if (params.time) {\n        return setCurrent(moment().year(2020).month(6).date(27).hour(20).minute(0))\n      }\n      return setCurrent(moment().year(2020).month(6).date(27).hour(9).minute(0))\n    }\n    setTime();\n    return () => {}\n  }, [params.time]);\n  \n\n  const getOptions = useCallback(() => {\n    return {\n      legend: {\n        data: ['전일 예측 연계전력(PV+ESS)', '시간별 연계전력(PV+ESS)'],\n        textStyle: {\n          color: '#4e73aa',\n        }\n      },\n      xAxis: {\n        data: service.getXAxisData({ from: moment(times.from), to: moment(times.to), interval: 'HOURLY' }),\n      },\n      series: [\n        {\n          type: 'line',\n          name: '전일 예측 연계전력(PV+ESS)',\n          data: (mockData || []).map(item => service.getValue(item, 'value', 0)),\n          symbol: 'none',\n          itemStyle: {\n            color: '#b8d2ff',\n          },\n          lineStyle: {\n            color: '#b8d2ff',\n            type: 'dashed',\n            width: 4\n          }\n        },\n        {\n          type: 'line',\n          name: '시간별 연계전력(PV+ESS)',\n          data: service.getValue(mergedData, 'realPv', []).map(item => service.getValue(item, 'pv', 0)),\n          symbol: 'none',\n          itemStyle: {\n            color: '#0d83ff',\n          },\n          lineStyle: {\n            color: '#0d83ff',\n            width: 4\n          }\n        }\n      ]\n    }\n  }, [times, mergedData]);\n  \n  const options = useMemo(() => getOptions(), [getOptions]);\n\n  return (\n    <Layout.Content style={{ marginRight: 36 }}>\n      <HeaderComponent />\n      <Layout style={{ background: 'transparent', paddingTop: 14, height: 'calc(100% - 44px)' }}>\n        <Layout.Content>\n          <BreadCrumb root=\"dashboard\" time={current} />\n\n          <div className=\"chart-wrap\" style={{ marginTop: 81 }}>\n            <CommonChart \n              options={options}\n              style={{ height: 'calc(100vh - 227px)' }}\n            />\n\n            <Button type=\"primary\" className=\"btn-small\">입찰서 생성</Button>\n          </div>\n        </Layout.Content>\n      </Layout>\n    </Layout.Content>\n  )\n}\n\n\nexport default Content\n\n","import React from 'react';\nimport { Layout, Card, Row, Col } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nimport { WithFullLayout } from '@/layouts';\n\nimport Content from './Content';\n\nfunction Container() {\n  const history = useHistory();\n\n  const onClick = () => {\n    history.push('/detail');\n  };\n\n  return (\n    <Layout className=\"dashboard-wrap\">\n      <Content />\n      <Layout.Sider width=\"28%\">\n        <Row justify=\"space-between\" align=\"center\" style={{ height: '100%' }}>\n          <Col flex=\"0 0 100%\" style={{ marginBottom: 10 }}>\n            <Card className=\"sider-card\" bordered={false}>\n              <Row style={{ height: '100%' }} justify=\"center\" align=\"middle\">\n                <Col flex=\"1 1 100%\" onClick={onClick} style={{ cursor: 'pointer', textAlign: 'center' }}>\n                  <img src={require('@/assets/sider_top.png')} alt=\"sider-top\" />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col flex=\"0 0 100%\">\n            <Card className=\"sider-card\" bordered={false}>\n              <Row style={{ height: '100%' }} justify=\"center\" align=\"middle\">\n                <Col flex=\"1 1 100%\" style={{ textAlign: 'center' }}>\n                  <img src={require('@/assets/sider_bottom.png')} alt=\"sider-bottom\" />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Layout.Sider>\n    </Layout>\n  )\n}\n\nexport default WithFullLayout(Container);"],"sourceRoot":""}